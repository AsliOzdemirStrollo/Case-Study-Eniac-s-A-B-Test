# -*- coding: utf-8 -*-
"""Eniac-ABTest

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15JklE_bSL0y19yhH_yImLtM6F4QplziP
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import t, ttest_ind
from scipy.stats import chi2_contingency
from scipy import stats

# eniac_a.csv
url = "https://drive.google.com/file/d/14rPzyhzihk05Y64uxXvMqCsz2qIqm16W/view?usp=sharing"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
eniac_a = pd.read_csv(path)

# eniac_b.csv
url = "https://drive.google.com/file/d/1UPST67Vf50_0awWzlg97Lwf8sfk6wzi7/view?usp=sharing"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
eniac_b = pd.read_csv(path)

# eniac_c.csv
url = "https://drive.google.com/file/d/12g85smEIOzuUJni4qY5kndEjTaPCmuyk/view?usp=sharing"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
eniac_c = pd.read_csv(path)

# eniac_d.csv
url = "https://drive.google.com/file/d/1bZw9JCYiiLEja39hZK4s8KAzaS1-KIE7/view?usp=sharing"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
eniac_d = pd.read_csv(path)

"""# Discover Databases

## a
"""

eniac_a.info()

eniac_a.describe()

eniac_a.sample(10)

eniac_a['Visible?'].value_counts()

invisible_elements_a = eniac_a[eniac_a['Visible?'] == False]
invisible_elements_a

eniac_a['Tag name'].value_counts()

no_of_clicks_a= eniac_a['No. clicks'].sum()
no_of_clicks_a

eniac_a.groupby('Tag name')['No. clicks'].sum()

"""### "shop now" and "see deal" clicks"""

shop_now_clicks_a = eniac_a[eniac_a['Name'] == 'SHOP NOW']['No. clicks'].sum()
shop_now_clicks_a

see_deals_clicks_a = eniac_a[eniac_a['Name'] == 'SEE DEALS']['No. clicks'].sum()
see_deals_clicks_a

eniac_a[eniac_a["Snapshot information"].notna()]

"""### total visits"""

for info in eniac_a["Snapshot information"].dropna():
    print(info)

total_visits_a = 25326

"""### total number of clicks"""

no_of_clicks_a= eniac_a['No. clicks'].sum()
no_of_clicks_a

"""## b"""

eniac_b.info()

eniac_b.describe()

eniac_b['No. clicks'].sum()

eniac_b.groupby('Tag name')['No. clicks'].sum()

"""### "shop now" and "see deal" clicks"""

shop_now_clicks_b = eniac_b[eniac_b['Name'] == 'SHOP NOW']['No. clicks'].sum()
shop_now_clicks_b

see_deals_clicks_b = eniac_b[eniac_b['Name'] == 'SEE DEALS']['No. clicks'].sum()
see_deals_clicks_b

"""### total visits"""

for info in eniac_b["Snapshot information"].dropna():
    print(info)

total_visits_b = 24747

"""### total number of clicks"""

no_of_clicks_b= eniac_b['No. clicks'].sum()
no_of_clicks_b

"""## c"""

eniac_c.info()

eniac_c.describe()

eniac_c['No. clicks'].sum()

eniac_c.groupby('Tag name')['No. clicks'].sum()

"""### "shop now" and "see deal" clicks"""

shop_now_clicks_c = eniac_c[eniac_c['Name'] == 'SHOP NOW']['No. clicks'].sum()
shop_now_clicks_c

see_deals_clicks_c = eniac_c[eniac_c['Name'] == 'SEE DEALS']['No. clicks'].sum()
see_deals_clicks_c

"""### total visits"""

for info in eniac_c["Snapshot information"].dropna():
    print(info)

total_visits_c = 24876

"""### total number of clicks"""

no_of_clicks_c= eniac_c['No. clicks'].sum()
no_of_clicks_c

"""## d"""

eniac_d.info()

eniac_d.describe()

eniac_d['No. clicks'].sum()

eniac_d.groupby('Tag name')['No. clicks'].sum()

"""### "shop now" and "see deal" clicks"""

shop_now_clicks_d = eniac_d[eniac_d['Name'] == 'SHOP NOW']['No. clicks'].sum()
shop_now_clicks_d

see_deals_clicks_d = eniac_d[eniac_d['Name'] == 'SEE DEALS']['No. clicks'].sum()
see_deals_clicks_d

"""### total visits"""

for info in eniac_d["Snapshot information"].dropna():
    print(info)

total_visits_d = 25233

"""### total number of clicks"""

no_of_clicks_d= eniac_d['No. clicks'].sum()
no_of_clicks_d

"""# Create observed results"""

# calculate didnt clicks:
didnot_click_a = total_visits_a - shop_now_clicks_a
didnot_click_b = total_visits_b - shop_now_clicks_b
didnot_click_c = total_visits_c - see_deals_clicks_c
didnot_click_d = total_visits_d - see_deals_clicks_d

clicks_data = {
    'clicked': [shop_now_clicks_a, shop_now_clicks_b, see_deals_clicks_c, see_deals_clicks_d],
    'didn\'t click': [didnot_click_a, didnot_click_b,didnot_click_c,didnot_click_d ]
}
observed_results = pd.DataFrame(clicks_data, index=['A', 'B', 'C', 'D']).T #.T rotates the table
observed_results

chisq, pvalue, df, expected = stats.chi2_contingency(observed_results)

alpha= 0.05

# Make a statistical decision!
if pvalue < alpha:
  print('We reject the null hypothesis, some versions were better, some were not, further investigation needed.')
else:
  print('We fail to reject null hypothesis.')

"""# CTRs for each versions"""

CTR_a = shop_now_clicks_a / total_visits_a
CTR_b = shop_now_clicks_b / total_visits_b
CTR_c = see_deals_clicks_c / total_visits_c
CTR_d = see_deals_clicks_d / total_visits_d

print(CTR_a,CTR_b,CTR_c,CTR_d)

print(f" Version A: {CTR_a * 100:.2f}%")
print(f"Version B: {CTR_b * 100:.2f}%")
print(f"Version C: {CTR_c * 100:.2f}%")
print(f"Version D: {CTR_d * 100:.2f}%")

"""# post-hoc test"""

# post-hoc test
chisq, pvalue, df, excepted = chi2_contingency(observed_results[['C', 'D']])
pvalue < (alpha/6)

# What a post-hoc test looks like:
chisq, pvalue, df, excepted = chi2_contingency(observed_results[['A', 'B']])
pvalue < (alpha/6)

# What a post-hoc test looks like:
chisq, pvalue, df, excepted = chi2_contingency(observed_results[['B', 'C']])
pvalue < (alpha/6)

# What a post-hoc test looks like:
chisq, pvalue, df, excepted = chi2_contingency(observed_results[['A', 'C']])
pvalue < (alpha/6)

# What a post-hoc test looks like:
chisq, pvalue, df, excepted = chi2_contingency(observed_results[['B', 'D']])
pvalue < (alpha/6)

# What a post-hoc test looks like:
chisq, pvalue, df, excepted = chi2_contingency(observed_results[['A', 'D']])
pvalue < (alpha/6)